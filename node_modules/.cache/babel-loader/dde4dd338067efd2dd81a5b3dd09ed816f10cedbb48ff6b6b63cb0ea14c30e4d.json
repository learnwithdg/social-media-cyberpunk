{"ast":null,"code":"// This optional code is used to register a service worker.\nconst isLocalhost=Boolean(window.location.hostname==='localhost'||window.location.hostname==='[::1]'||window.location.hostname.match(/^127\\.(?:\\d{1,3}\\.){2}\\d{1,3}$/));export function register(){if('serviceWorker'in navigator){window.addEventListener('load',()=>{const swUrl=`${process.env.PUBLIC_URL}/service-worker.js`;if(isLocalhost){checkValidServiceWorker(swUrl);}else{registerValidSW(swUrl);}});}}function registerValidSW(swUrl){navigator.serviceWorker.register(swUrl).then(registration=>{registration.onupdatefound=()=>{const installingWorker=registration.installing;if(installingWorker){installingWorker.onstatechange=()=>{if(installingWorker.state==='installed'){if(navigator.serviceWorker.controller){console.log('New content available, please refresh.');}else{console.log('Content cached for offline use.');}}};}};}).catch(error=>console.error('Error registering service worker:',error));}function checkValidServiceWorker(swUrl){fetch(swUrl).then(response=>{var _response$headers$get;if(response.status===404||!((_response$headers$get=response.headers.get('content-type'))!==null&&_response$headers$get!==void 0&&_response$headers$get.includes('javascript'))){navigator.serviceWorker.ready.then(registration=>{registration.unregister().then(()=>window.location.reload());});}else{registerValidSW(swUrl);}}).catch(()=>console.log('No internet connection, running in offline mode.'));}export function unregister(){if('serviceWorker'in navigator){navigator.serviceWorker.ready.then(registration=>{registration.unregister();});}}","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","match","register","navigator","addEventListener","swUrl","process","env","PUBLIC_URL","checkValidServiceWorker","registerValidSW","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","fetch","response","_response$headers$get","status","headers","get","includes","ready","unregister","reload"],"sources":["C:/Users/Lenovo/Pictures/social-media-cyberpunk/src/serviceWorkerRegistration.ts"],"sourcesContent":["// This optional code is used to register a service worker.\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  window.location.hostname === '[::1]' ||\r\n  window.location.hostname.match(\r\n    /^127\\.(?:\\d{1,3}\\.){2}\\d{1,3}$/\r\n  )\r\n);\r\n\r\nexport function register() {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                console.log('New content available, please refresh.');\r\n              } else {\r\n                console.log('Content cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch(error => console.error('Error registering service worker:', error));\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      if (response.status === 404 || !response.headers.get('content-type')?.includes('javascript')) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => window.location.reload());\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => console.log('No internet connection, running in offline mode.'));\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA,KAAM,CAAAA,WAAW,CAAGC,OAAO,CACzBC,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,WAAW,EACxCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,GAAK,OAAO,EACpCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAC5B,gCACF,CACF,CAAC,CAED,MAAO,SAAS,CAAAC,QAAQA,CAAA,CAAG,CACzB,GAAI,eAAe,EAAI,CAAAC,SAAS,CAAE,CAChCL,MAAM,CAACM,gBAAgB,CAAC,MAAM,CAAE,IAAM,CACpC,KAAM,CAAAC,KAAK,CAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,oBAAoB,CAE3D,GAAIZ,WAAW,CAAE,CACfa,uBAAuB,CAACJ,KAAK,CAAC,CAChC,CAAC,IAAM,CACLK,eAAe,CAACL,KAAK,CAAC,CACxB,CACF,CAAC,CAAC,CACJ,CACF,CAEA,QAAS,CAAAK,eAAeA,CAACL,KAAa,CAAE,CACtCF,SAAS,CAACQ,aAAa,CACpBT,QAAQ,CAACG,KAAK,CAAC,CACfO,IAAI,CAACC,YAAY,EAAI,CACpBA,YAAY,CAACC,aAAa,CAAG,IAAM,CACjC,KAAM,CAAAC,gBAAgB,CAAGF,YAAY,CAACG,UAAU,CAChD,GAAID,gBAAgB,CAAE,CACpBA,gBAAgB,CAACE,aAAa,CAAG,IAAM,CACrC,GAAIF,gBAAgB,CAACG,KAAK,GAAK,WAAW,CAAE,CAC1C,GAAIf,SAAS,CAACQ,aAAa,CAACQ,UAAU,CAAE,CACtCC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC,CACvD,CAAC,IAAM,CACLD,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC,CAChD,CACF,CACF,CAAC,CACH,CACF,CAAC,CACH,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,EAAIH,OAAO,CAACG,KAAK,CAAC,mCAAmC,CAAEA,KAAK,CAAC,CAAC,CAC9E,CAEA,QAAS,CAAAd,uBAAuBA,CAACJ,KAAa,CAAE,CAC9CmB,KAAK,CAACnB,KAAK,CAAC,CACTO,IAAI,CAACa,QAAQ,EAAI,KAAAC,qBAAA,CAChB,GAAID,QAAQ,CAACE,MAAM,GAAK,GAAG,EAAI,GAAAD,qBAAA,CAACD,QAAQ,CAACG,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,UAAAH,qBAAA,WAApCA,qBAAA,CAAsCI,QAAQ,CAAC,YAAY,CAAC,EAAE,CAC5F3B,SAAS,CAACQ,aAAa,CAACoB,KAAK,CAACnB,IAAI,CAACC,YAAY,EAAI,CACjDA,YAAY,CAACmB,UAAU,CAAC,CAAC,CAACpB,IAAI,CAAC,IAAMd,MAAM,CAACC,QAAQ,CAACkC,MAAM,CAAC,CAAC,CAAC,CAChE,CAAC,CAAC,CACJ,CAAC,IAAM,CACLvB,eAAe,CAACL,KAAK,CAAC,CACxB,CACF,CAAC,CAAC,CACDiB,KAAK,CAAC,IAAMF,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC,CAAC,CACjF,CAEA,MAAO,SAAS,CAAAW,UAAUA,CAAA,CAAG,CAC3B,GAAI,eAAe,EAAI,CAAA7B,SAAS,CAAE,CAChCA,SAAS,CAACQ,aAAa,CAACoB,KAAK,CAACnB,IAAI,CAACC,YAAY,EAAI,CACjDA,YAAY,CAACmB,UAAU,CAAC,CAAC,CAC3B,CAAC,CAAC,CACJ,CACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}