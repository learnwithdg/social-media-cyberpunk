{"ast":null,"code":"// This optional code is used to register a service worker.\nconst isLocalhost = Boolean(window.location.hostname === 'localhost' || window.location.hostname === '[::1]' || window.location.hostname.match(/^127\\.(?:\\d{1,3}\\.){2}\\d{1,3}$/));\nexport function register() {\n  if ('serviceWorker' in navigator) {\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n      if (isLocalhost) {\n        checkValidServiceWorker(swUrl);\n      } else {\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker.register(swUrl).then(registration => {\n    registration.onupdatefound = () => {\n      const installingWorker = registration.installing;\n      if (installingWorker) {\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              console.log('New content available, please refresh.');\n            } else {\n              console.log('Content cached for offline use.');\n            }\n          }\n        };\n      }\n    };\n  }).catch(error => console.error('Error registering service worker:', error));\n}\nfunction checkValidServiceWorker(swUrl) {\n  fetch(swUrl).then(response => {\n    var _response$headers$get;\n    if (response.status === 404 || !((_response$headers$get = response.headers.get('content-type')) !== null && _response$headers$get !== void 0 && _response$headers$get.includes('javascript'))) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister().then(() => window.location.reload());\n      });\n    } else {\n      registerValidSW(swUrl);\n    }\n  }).catch(() => console.log('No internet connection, running in offline mode.'));\n}\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}","map":{"version":3,"names":["isLocalhost","Boolean","window","location","hostname","match","register","navigator","addEventListener","swUrl","process","env","PUBLIC_URL","checkValidServiceWorker","registerValidSW","serviceWorker","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","catch","error","fetch","response","_response$headers$get","status","headers","get","includes","ready","unregister","reload"],"sources":["C:/Users/Lenovo/Pictures/social-media-cyberpunk/src/serviceWorkerRegistration.ts"],"sourcesContent":["// This optional code is used to register a service worker.\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n  window.location.hostname === '[::1]' ||\r\n  window.location.hostname.match(\r\n    /^127\\.(?:\\d{1,3}\\.){2}\\d{1,3}$/\r\n  )\r\n);\r\n\r\nexport function register() {\r\n  if ('serviceWorker' in navigator) {\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        checkValidServiceWorker(swUrl);\r\n      } else {\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker) {\r\n          installingWorker.onstatechange = () => {\r\n            if (installingWorker.state === 'installed') {\r\n              if (navigator.serviceWorker.controller) {\r\n                console.log('New content available, please refresh.');\r\n              } else {\r\n                console.log('Content cached for offline use.');\r\n              }\r\n            }\r\n          };\r\n        }\r\n      };\r\n    })\r\n    .catch(error => console.error('Error registering service worker:', error));\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string) {\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      if (response.status === 404 || !response.headers.get('content-type')?.includes('javascript')) {\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => window.location.reload());\r\n        });\r\n      } else {\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => console.log('No internet connection, running in offline mode.'));\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n"],"mappings":"AAAA;AACA,MAAMA,WAAW,GAAGC,OAAO,CACzBC,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,WAAW,IACxCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,KAAK,OAAO,IACpCF,MAAM,CAACC,QAAQ,CAACC,QAAQ,CAACC,KAAK,CAC5B,gCACF,CACF,CAAC;AAED,OAAO,SAASC,QAAQA,CAAA,EAAG;EACzB,IAAI,eAAe,IAAIC,SAAS,EAAE;IAChCL,MAAM,CAACM,gBAAgB,CAAC,MAAM,EAAE,MAAM;MACpC,MAAMC,KAAK,GAAG,GAAGC,OAAO,CAACC,GAAG,CAACC,UAAU,oBAAoB;MAE3D,IAAIZ,WAAW,EAAE;QACfa,uBAAuB,CAACJ,KAAK,CAAC;MAChC,CAAC,MAAM;QACLK,eAAe,CAACL,KAAK,CAAC;MACxB;IACF,CAAC,CAAC;EACJ;AACF;AAEA,SAASK,eAAeA,CAACL,KAAa,EAAE;EACtCF,SAAS,CAACQ,aAAa,CACpBT,QAAQ,CAACG,KAAK,CAAC,CACfO,IAAI,CAACC,YAAY,IAAI;IACpBA,YAAY,CAACC,aAAa,GAAG,MAAM;MACjC,MAAMC,gBAAgB,GAAGF,YAAY,CAACG,UAAU;MAChD,IAAID,gBAAgB,EAAE;QACpBA,gBAAgB,CAACE,aAAa,GAAG,MAAM;UACrC,IAAIF,gBAAgB,CAACG,KAAK,KAAK,WAAW,EAAE;YAC1C,IAAIf,SAAS,CAACQ,aAAa,CAACQ,UAAU,EAAE;cACtCC,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;YACvD,CAAC,MAAM;cACLD,OAAO,CAACC,GAAG,CAAC,iCAAiC,CAAC;YAChD;UACF;QACF,CAAC;MACH;IACF,CAAC;EACH,CAAC,CAAC,CACDC,KAAK,CAACC,KAAK,IAAIH,OAAO,CAACG,KAAK,CAAC,mCAAmC,EAAEA,KAAK,CAAC,CAAC;AAC9E;AAEA,SAASd,uBAAuBA,CAACJ,KAAa,EAAE;EAC9CmB,KAAK,CAACnB,KAAK,CAAC,CACTO,IAAI,CAACa,QAAQ,IAAI;IAAA,IAAAC,qBAAA;IAChB,IAAID,QAAQ,CAACE,MAAM,KAAK,GAAG,IAAI,GAAAD,qBAAA,GAACD,QAAQ,CAACG,OAAO,CAACC,GAAG,CAAC,cAAc,CAAC,cAAAH,qBAAA,eAApCA,qBAAA,CAAsCI,QAAQ,CAAC,YAAY,CAAC,GAAE;MAC5F3B,SAAS,CAACQ,aAAa,CAACoB,KAAK,CAACnB,IAAI,CAACC,YAAY,IAAI;QACjDA,YAAY,CAACmB,UAAU,CAAC,CAAC,CAACpB,IAAI,CAAC,MAAMd,MAAM,CAACC,QAAQ,CAACkC,MAAM,CAAC,CAAC,CAAC;MAChE,CAAC,CAAC;IACJ,CAAC,MAAM;MACLvB,eAAe,CAACL,KAAK,CAAC;IACxB;EACF,CAAC,CAAC,CACDiB,KAAK,CAAC,MAAMF,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC,CAAC;AACjF;AAEA,OAAO,SAASW,UAAUA,CAAA,EAAG;EAC3B,IAAI,eAAe,IAAI7B,SAAS,EAAE;IAChCA,SAAS,CAACQ,aAAa,CAACoB,KAAK,CAACnB,IAAI,CAACC,YAAY,IAAI;MACjDA,YAAY,CAACmB,UAAU,CAAC,CAAC;IAC3B,CAAC,CAAC;EACJ;AACF","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}